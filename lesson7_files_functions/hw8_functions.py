"""
Задание 1
Напишите функцию change(lst), которая принимает список и меняет местами его первый и последний элемент.
В исходном списке минимум 2 элемента.

Задание 2
Напишите функцию to_dict(lst), которая принимает аргумент в виде списка и возвращает словарь, в котором каждый элемент
списка является и ключом и значением. Предполагается, что элементы списка будут соответствовать правилам задания ключей в словарях.

Задание 3
Напишите функцию sum_range(start, end), которая суммирует все целые числа от значения «start» до величины «end»
включительно. Если пользователь задаст первое число большее чем второе, просто поменяйте их местами.

Задание 4
Напишите функцию read_last(lines, file), которая будет открывать определенный файл file и выводить на печать
построчно последние строки в количестве lines (на всякий случай проверим, что задано положительное целое число).

"""
# ____________________________________________________________________________________________________________
"""Задание 1
Напишите функцию change(lst), которая принимает список и меняет местами его первый и последний элемент.
В исходном списке минимум 2 элемента."""
print('Задание 1')

def change(lst: list) -> list:
    print(f'Исходный список: {lst}')
    lst_changed = []
    lst_changed.append(lst[len(lst)-1])
    lst_changed.extend(lst[1:len(lst)-1])
    lst_changed.append(lst[0])
    print(f'Конечный список: {lst_changed}')
    return lst_changed


while True:
    new_list = input('Введите значения списка через запятую. Минимум 2 эллемента: ').split(',')
    if len(new_list) > 1:
        break
    else:
        print('Список слишком мал')

change(new_list)
# ____________________________________________________________________________________________________________
"""Задание 2
Напишите функцию to_dict(lst), которая принимает аргумент в виде списка и возвращает словарь, в котором каждый элемент
списка является и ключом и значением. Предполагается, что элементы списка будут соответствовать правилам задания ключей в словарях."""
print('Задание 2')

def to_dict(lst: list) -> dict:
    dictionary = {}
    for i in lst:
        if i != '' and i != ' ':
            dictionary.update({i: i})
        else:
            continue
    return dictionary


print(f'Словарь: {to_dict(new_list)}')
# ____________________________________________________________________________________________________________
"""Задание 3
Напишите функцию sum_range(start, end), которая суммирует все целые числа от значения «start» до величины «end»
включительно. Если пользователь задаст первое число большее чем второе, просто поменяйте их местами."""
print('Задание 3')

def sum_range(start: int, end: int) -> int:
    sum_numbers = 0
    if start > end:
        new_start = end
        new_end = start
    else:
        new_start = start
        new_end = end

    while new_start <= new_end:
        sum_numbers += new_start
        new_start += 1

    return sum_numbers


"""Валидация ввода начального и конечного числа """
while True:
    try:
        value_from = int(input('Введите целое число ОТ: '))
        value_to = int(input('Введите целое число ДО: '))
        break
    except ValueError as e:
        print(f'Число не целое, ошибка: {e}')
print(f'Сумма {sum_range(value_from, value_to)}')
# ____________________________________________________________________________________________________________
"""Задание 4
Напишите функцию read_last(lines, file), которая будет открывать определенный файл file и выводить на печать
построчно последние строки в количестве lines (на всякий случай проверим, что задано положительное целое число)."""
print('Задание 4')

def read_last(lines, file):

    data_from_file = open(file, 'r', encoding='UTF-8')
    f_list = data_from_file.readlines()
    data_from_file.close()
    i = 1
    if lines > len(f_list):
        print('В файле нету такого количества строк')
    else:
        while i <= lines:
            string = f_list[len(f_list) - i]
            print(f'{i}: {string}')
            i += 1


while True:
    try:
        number = int(input('Введите целое число больше 0, количество строк которых хотите получить: '))
        if number > 0:
            break
        else:
            print(f'Вы ввели число меньше 1')
    except ValueError as e:
        print(f'Вы ввели не целое число, ошибка: {e}')

data_file = '../utils/text_hw8.txt'
read_last(number, data_file)

